#Adds the disease in question and sends notifications to everyone who should know. Checks validity and sends treatment event. Needs the arguments DISEASE (trait name, only exception is early_great_pox - it should be added as great_pox and then the effect will figure out whether the character should have early_great_pox first) and TREATMENT_EVENT (yes/no). Does NOT send an event to the character who gets the disease.
contract_disease_effect = {
	if = { #Is the disease valid?
		limit = { can_contract_disease_trigger = { DISEASE = $DISEASE$ } }
		replace_trick_with_trait = { TRAIT = strong }
		replace_trick_with_trait = { TRAIT = weak }
		hidden_effect = {
			#SET SCOPES
			save_scope_as = sick_character

			save_scope_value_as = {
				name = disease_type
				value = flag:$DISEASE$
			}

			save_temporary_scope_value_as = {
				name = treatment_event
				value = flag:$TREATMENT_EVENT$
			}

			if = {
				limit = { #Should I get early great pox instead of great pox?
					scope:disease_type = flag:great_pox
					NOR = {
						has_trait = lovers_pox
						has_trait = early_great_pox
					}
				}
				save_scope_value_as = {
					name = disease_type
					value = flag:early_great_pox
				}
			}

			#Data collection
			disease_data_save_contraction_effect = { DISEASE = $DISEASE$ }


			#TREATMENT EVENT
			if = {
				limit = {
					scope:treatment_event = flag:yes
				}

				trigger_event = {
					id = health.3100
					days = 5
				}
			}
			else_if = {
				limit = { scope:treatment_event = flag:no } #This is just here to stop errors
			}
		}


		#NON-CONTAGIOUS DISEASES
		if = {
			limit = {
				OR = {
					scope:disease_type = flag:ill
					scope:disease_type = flag:pneumonic
					scope:disease_type = flag:gout_ridden
					scope:disease_type = flag:leper
					scope:disease_type = flag:cancer
					scope:disease_type = flag:ergotism
				}
			}

			if = { #Removes ill if progressing to pneumonia
				limit = {
					scope:disease_type = flag:pneumonic
					has_trait = ill
				}
				remove_trait = ill
			}

			add_trait_force_tooltip = $DISEASE$
		}
		
		#CONTAGIOUS DISEASES
		if = {
			limit = {
				OR = {
					scope:disease_type = flag:smallpox
					scope:disease_type = flag:measles
					scope:disease_type = flag:dysentery
					scope:disease_type = flag:bubonic_plague
					scope:disease_type = flag:typhus
					scope:disease_type = flag:consumption
				}
			}

			add_trait_force_tooltip = $DISEASE$
		}

		#STD DISEASES
		else_if = { #Lover's pox
			limit = { scope:disease_type = flag:lovers_pox }
			add_trait_force_tooltip = lovers_pox

			hidden_effect = {
				#Trigger regular contagion checks
				trigger_event = {
					id = health.1200
					days = { 60 1000 } #This first one can happen quite fast, the following checks are delayed 250-10000 days depending on traits
				}
			}
		}
		else_if = { #Early great pox
			limit = { scope:disease_type = flag:early_great_pox }
			add_trait_force_tooltip = early_great_pox
			
			hidden_effect = {
				trigger_event = {
					id = health.1013 #Reveals the true disease
					days = { 90 150 }
				}
			}
		}
		else_if = { #Great pox
			limit = {  scope:disease_type = flag:great_pox }

			hidden_effect = {
				remove_trait = lovers_pox #If you get Great Pox and already have lover's pox, we pretend that lover's pox was the first symptoms
				remove_trait = early_great_pox
			}
			add_trait_force_tooltip = great_pox

			hidden_effect = {
				#Trigger regular contagion checks
				trigger_event = {
					id = health.1201
					days = { 250 1500 } #This first one can happen quite fast, the following checks are delayed 350-10000 days depending on traits
				}
			}
		}

		#RECOVERY
		if = { #Ill
			limit = { scope:disease_type = flag:ill }
			trigger_event = {
				id = health.1101
				days = { ill_recovery_min ill_recovery_max }
			}
		}
		else_if = { #Pneumonic
			limit = { scope:disease_type = flag:pneumonic }
			trigger_event = {
				id = health.1102
				days = { pneumonic_recovery_min pneumonic_recovery_max }
			}
		}
		else_if = { #Gout
			limit = { scope:disease_type = flag:gout_ridden }
			random = {
				chance = 25
				modifier = {
					has_trait = gluttonous
					add = -15
				}
				modifier = {
					has_trait = temperate
					add = 15
				}
				trigger_event = {
					id = health.1103
					days = { gout_ridden_recovery_min gout_ridden_recovery_max } #1 to 30 years
				}
			}
		}
		else_if = { #Typhus
			limit = { scope:disease_type = flag:typhus }
			trigger_event = {
				id = health.1105
				days = { 45 150 }
			}
		}
		else_if = { #Consumption
			limit = { scope:disease_type = flag:consumption }
			trigger_event = {
				id = health.1106
				days = { 365 2190 } #1 to 6 years
			}
		}
		else_if = { #Cancer
			limit = { scope:disease_type = flag:cancer }
			random = {
				chance = 1
				trigger_event = {
					id = health.1107
					days = { 365 3650 } #1 to 10 years
				}
			}
		}
		else_if = { #Great pox
			limit = {
				OR = {
					scope:disease_type = flag:early_great_pox
					scope:disease_type = flag:great_pox
				}
			}
			trigger_event = {
				id = health.1109
				days = { 730 5475 } #2 to 15 years (note that early pox progresses into great pox in 60-150 days and great pox leads to lunacy after 5 to 15 years)
			}
		}
		else_if = { #Smallpox
			limit = { scope:disease_type = flag:smallpox }
			trigger_event = {
				id = health.1110
				days = { smallpox_min_recovery_time smallpox_max_recovery_time }
			}
		}
		else_if = { #Bubonic Plague
			limit = { scope:disease_type = flag:bubonic_plague }
			trigger_event = {
				id = health.1111
				days = { bubonic_plague_min_recovery_time bubonic_plague_max_recovery_time }
			}
		}
		else_if = { #Measles
			limit = { scope:disease_type = flag:measles }
			trigger_event = {
				id = health.1112
				days = { measles_min_recovery_time measles_max_recovery_time }
			}
		}
		else_if = { #Dysentery
			limit = { scope:disease_type = flag:dysentery }
			trigger_event = {
				id = health.1113
				days = { dysentery_min_recovery_time dysentery_max_recovery_time }
			}
		}
		else_if = { #Ergotism
			limit = { scope:disease_type = flag:ergotism }
			trigger_event = {
				id = health.1114
				days = { ergotism_min_recovery_time ergotism_max_recovery_time }
			}
		}
		#No recovery for leper and lover's pox


		#EPILEPSY RISK
		if = {
			limit = { scope:disease_type = flag:ill }
			epilepsy_fever_risk_effect = { CHANCE = 1 }
		}
		else_if = {
			limit = {
				OR = {
					scope:disease_type = flag:pneumonic
					scope:disease_type = flag:typhus
					scope:disease_type = flag:consumption
					scope:disease_type = flag:measles
					scope:disease_type = flag:dysentery
					scope:disease_type = flag:smallpox
					scope:disease_type = flag:bubonic_plague
				}
			}
			epilepsy_fever_risk_effect = { CHANCE = 5 }
		}

		#NOTIFICATIONS: CONTAGIOUS DISEASE, FAMILY & SEX PARTNER STD, NOTIFICATIONS & LIEGE TREATMENT EVENTS

		#List creation:
		#Imprisoner/court owner if contagious
		if = {
			limit = {
				OR = {
					scope:disease_type = flag:smallpox
					scope:disease_type = flag:bubonic_plague
					scope:disease_type = flag:measles
					scope:disease_type = flag:dysentery
					scope:disease_type = flag:typhus
					scope:disease_type = flag:consumption
				}
				is_ruler = no
				has_health_court_owner_trigger = yes #Imprisoner or court owner
			}
			save_health_court_owner_effect = { SCOPE_NAME = health_court_owner }#Imprisoner or court owner

			scope:health_court_owner = {
				add_to_temporary_list = disase_notification_list
			}
		}
		#Sex partners if STD
		if = {
			limit = {
				OR = {
					scope:disease_type = flag:lovers_pox
					scope:disease_type = flag:early_great_pox
					scope:disease_type = flag:great_pox
				}
			}
			every_consort = {
				add_to_temporary_list = disase_notification_list
			}
			every_relation = {
				type = lover
				add_to_temporary_list = disase_notification_list
			}
		}
		#Family if the disease is somewhat dangerous
		if = {
			limit = {
				sick_enough_for_relative_to_care_trigger = yes
			}
			every_parent = {
				limit = {
					is_landed = yes
				}
				add_to_temporary_list = disase_notification_list
			}
			every_spouse = {
				limit = {
					is_landed = yes
				}
				add_to_temporary_list = disase_notification_list
			}
			every_heir_title = {
				limit = {
					exists = holder
				}
				holder = {
					if = {
						limit = {
							player_heir = scope:sick_character
						}
						add_to_temporary_list = disase_notification_list
					}
				}
			}
		}

		#Go through list and send notifications
		every_in_list = {
			list = disase_notification_list

			#Send a STD warning event
			if = {
				limit = {
					OR = {
						scope:disease_type = flag:lovers_pox
						scope:disease_type = flag:early_great_pox
						scope:disease_type = flag:great_pox
					}
					OR = {
						is_consort_of = scope:sick_character
						has_relation_lover = scope:sick_character
					}
				}
				scope:sick_character = { save_scope_as = std_partner }
				if = {
					limit = { scope:disease_type = flag:great_pox }
					trigger_event = {
						id = health.2002 #Partner has great pox
						days = { 7 14 }
					}
				}
				else = {
					trigger_event = {
						id = health.2001 #Partner has lover's pox/early great great pox
						days = { 7 14 }
					}
				}
			}
			#Send a notification/treatment event to family
			else_if = {
				limit = {
					OR = {
						#It's a player heir
						trigger_if = {
							limit = { exists = player_heir }
							player_heir = scope:sick_character
						}
						#Or a child/spouse who is really sick or this character has to pick their treatment
						AND = {
							is_spouse_of = scope:sick_character #we only send you your spouse and primary heir to avoid event spam with plagues
							OR = {
								#The sick character is dying
								health < death_chance_dying_health
								#This character gets to pick sick character's treatment
								trigger_if = {
									limit = { exists = scope:sick_character.liege }
									this = scope:sick_character.liege
									scope:sick_character = { liege_picks_treatment_trigger = yes }
								}
							}
						}
					}
				}
				trigger_event = {
					id = health.2201 #Important character is sick
					days = 3
				}
				#set a variable, so you are sure to get a follow-up
				if = {
					limit = { is_ai = no }
					scope:sick_character = {
						add_to_variable_list = {
							name = recovery_event_receivers
							target = prev
						}
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:epidemic
					is_target_in_variable_list = {
						name = notified_of_epidemics
						target = scope:epidemic
					}
				}
				# Don't get spammed by courtiers and guests falling sick during epidemics
			}
			#Send a feed message
						else = {	
				send_interface_message = {
					type = msg_disease_contraction
					left_icon = scope:sick_character
					localization_values = {
						disease_trait = trait:$DISEASE$
						message_receiver = this
					}
					show_as_tooltip = {
						scope:sick_character = {	
							if = {
								limit = { scope:disease_type = flag:early_great_pox }
								add_trait_force_tooltip = early_great_pox
							}
							else = {
								add_trait_force_tooltip = $DISEASE$
							}
						}
					}
				}
				if = {
					limit = { is_ai = no }
					add_to_variable_list = {
						name = notified_of_epidemics
						target = scope:epidemic
					}
				}
			}
		}
	}
	hidden_effect = {
		if = {
			limit = {
				exists = scope:epidemic
			}
			give_epidemic_immunity = { EPIDEMIC = scope:epidemic }
			# Give appropriate memory
			if = {
				limit = {
					scope:disease_type = flag:bubonic_plague
				}
				create_character_memory = {
					type = ce1_contracted_black_death
				}
			}
			else = {
				create_character_memory = {
					type = ce1_contracted_epidemic
				}
				scope:new_memory = {
					if = {
						limit = {
							NOT = { exists = var:epidemic_infected }
						}
						set_variable = {
							name = epidemic_infected
							value = scope:epidemic.epidemic_type.epidemic_trait
						}
					}
				}
			}
		}
	}
}